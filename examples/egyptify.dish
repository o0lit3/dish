## https://rosettacode.org/wiki/Egyptian_fractions

egyptify = :f(
  out: []

  (f >= 1).then(
    (r.'denom' == 1).then(
      out << [f]
      f = 1
    ).else(
      out << [f.int]
      f = f - f.int
    )
  )

  r: f.ratio

  (r.'num' > 1).redo:(
    out << [1 / (1 / f).ceil]
    f = (-r.'denom' % r.'num') / (r.'denom' * (1 / f).ceil)
    r = f.ratio
  )

  (out << [f]).map:f((f.ratio.'denom' == 1).switch[f, f.ratio.vals.join('/')])
)

(2..99).each:b(
  (2..b).each:a(
    e: (a / b).egyptify
    (#e > tmax).then(tmax = #e, term = a / b)
    (#e.-1 - 2 > dmax).then(dmax = #e.-1 - 2, denom = a / b)
  )
)

[
  43/48
  5/121
  2014/59
].map:f(
  "$(f.ratio.vals.join('/')) = $(f.egyptify.join(' + '))"
).join("\n") + "\n\n" + [
  "Fraction with the highest number of terms ($tmax terms): $(term.ratio.vals.join('/'))"
  "Fraction with the largest denominator ($dmax digits): $(denom.ratio.vals.join('/'))"
].join("\n")
