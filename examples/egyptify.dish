// https://rosettacode.org/wiki/Egyptian_fractions

egyptify = :f(
  out: []

  (f >= 1).then(
    (f.ratio.1 == 1).then(
      out << f
      f = 1
    ).else(
      out << f.int
      f = f - f.int
    )
  )

  (f.ratio.0 > 1).redo(
    out << 1 / (1 / f).ceil
    f = ((-f.ratio.1 % f.ratio.0 + f.ratio.0) % f.ratio.0) / (f.ratio.1 * (1 / f).ceil)
  )

  (out << f).map:r((r.ratio.1 == 1).then(r).else(r.ratio.join('/')))
)

(2..99).each:a(
  (2..99).each:b(
    e: (a / b).egyptify
    (#e > tmax).then(tmax = #e, term = a / b)
    (#e.(-1) - 2 > dmax).then(dmax = #e.(-1) - 2, denom = a / b)
  )
)

[
  43/48
  5/121
  2014/59
].map:f(
  "$(f.ratio.join('/')) = $(f.egyptify.join(' + '))"
).join("\n") ~ "\n\n" ~ [
  "Fraction with the highest number of terms ($(tmax) terms): $(term.ratio.join('/'))"
  "Fraction with the largest denominator ($(dmax) digits): $(denom.ratio.join('/'))"
].join("\n")
